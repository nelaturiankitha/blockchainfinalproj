<%- include partials/header.ejs %>
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.14.1/css/ol.css" type="text/css">
  <style>
    .map {
      height: 250px;
      width: 100%;
      margin: 0 auto;
    }
    .content {
      max-width: 600px;
      margin: 25px auto 0; /* Add top margin of 50px */
      text-align: center;
    }
  </style>
  <script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.14.1/build/ol.js"></script>
  <title>OpenLayers example</title>
</head>
<body>
  <div class="content">
    <h2>Come Find Us</h2>
    <div id="map" class="map"></div>
    <label for="location">Your Location:</label>
    <input type="text" id="location" placeholder="Enter your location">
    <br>
    <label for="mcdonald">Nearest McDonald's:</label>
    <input type="text" id="mcdonald" placeholder="Enter nearest McDonald's">
    <br>
    <button onclick="calculateDistance()">Calculate Distance</button>
    <p id="yourCoords"></p>
    <p id="mcCoords"></p>
    <p id="distance"></p>
  </div>

  <script type="text/javascript">
    var map = new ol.Map({
      target: 'map',
      layers: [
        new ol.layer.Tile({
          source: new ol.source.OSM()
        })
      ],
      view: new ol.View({
        center: ol.proj.fromLonLat([37.41, 8.82]),
        zoom: 4
      })
    });

    function calculateDistance() {
      const yourLocation = document.getElementById('location').value;
      const nearestMcDonald = document.getElementById('mcdonald').value;

      // Convert locations to coordinates
      const coordsPromises = [
        fetch('http://evntz-node-api-ra-ie.ap-south-1.elasticbeanstalk.com/location/coordinates', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ to: 'coordinates', name: yourLocation })
        }).then(response => response.json()),
        fetch('http://evntz-node-api-ra-ie.ap-south-1.elasticbeanstalk.com/location/coordinates', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ to: 'coordinates', name: nearestMcDonald })
        }).then(response => response.json())
      ];

      Promise.all(coordsPromises)
        .then(([yourCoords, mcCoords]) => {
          const input1 = {
            latitude: yourCoords.latitude,
            longitude: yourCoords.longitude
          };
          const input2 = {
            latitude: mcCoords.latitude,
            longitude: mcCoords.longitude
          };

          console.error("there");
          // Display coordinates
          document.getElementById('yourCoords').textContent = `Your Location Coordinates: Latitude: ${yourCoords.latitude}, Longitude: ${yourCoords.longitude}`;
          document.getElementById('mcCoords').textContent = `McDonald's Location Coordinates: Latitude: ${mcCoords.latitude}, Longitude: ${mcCoords.longitude}`;


          const url = 'https://1e17ii1a33.execute-api.eu-west-1.amazonaws.com/Beta/try1';
const encodedUrl = encodeURIComponent(url);
const requestBody = JSON.stringify({
  input1: { latitude: yourCoords.latitude, longitude: yourCoords.longitude },
  input2: { latitude: mcCoords.latitude, longitude: mcCoords.longitude }
});

const callbackName = 'handleResponse';

const script = document.createElement('script');
script.src = `https://api.allorigins.win/get?callback=${callbackName}&url=${encodedUrl}&method=POST&headers=&body=${encodeURIComponent(requestBody)}`;
document.body.appendChild(script);

window[callbackName] = function(data) {
  if (data.status.http_code === 200) {
    const responseData = JSON.parse(data.contents);
    console.log(responseData);

    const distanceElement = document.getElementById('distance');
    if (distanceElement) {
      distanceElement.textContent = `Distance: ${responseData.distance} km`;
    } else {
      console.error('Element with ID "distance" not found');
    }
  } else {
    console.error('Error:', data.status.description);
  }

  // Clean up the script element
  document.body.removeChild(script);
  delete window[callbackName];
};
 const distance = calculateDistanceBetweenCoordinates(input1, input2);
 document.getElementById('distance').textContent = `Distance: ${distance.toFixed(2)} km`;
  })
  .catch(error => {
    console.error('Error:', error);
  });
    }

    function calculateDistanceBetweenCoordinates(coord1, coord2) {
      const R = 6371; // Radius of the Earth in km
      const dLat = deg2rad(coord2.latitude - coord1.latitude);
      const dLon = deg2rad(coord2.longitude - coord1.longitude);
      const a =
        Math.sin(dLat / 2) * Math.sin(dLat / 2) +
        Math.cos(deg2rad(coord1.latitude)) * Math.cos(deg2rad(coord2.latitude)) *
        Math.sin(dLon / 2) * Math.sin(dLon / 2);
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      const d = R * c;
      return d;
    }

    function deg2rad(deg) {
      return deg * (Math.PI / 180);
    }
  </script>
</body>
</html>

<%- include partials/footer.ejs %>
