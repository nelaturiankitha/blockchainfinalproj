<%- include partials/header.ejs %>

<!DOCTYPE html>
<html>
<head>
    <title>SMART CONTRACT TEST</title>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.2.7-rc.0/web3.min.js"></script>
    <style>
                    body {
                    background-color: #F7D6E0; /* Pastel Lavender background */
                    font-size: 20px;
                    color: #333333; /* Dark grey for text */
                    font-family: 'Arial', sans-serif;
                    text-align: center;
                    margin: 0;
                    padding: 0;
                }
                    
                .buttons-container {
                    display: flex;
                    justify-content: center;
                    padding: 20px;
                }

                button {
                    background-color: #FAD2E1; /* Pastel Pink for buttons */
                    color: #333333; /* Dark grey text on buttons */
                    font-size: 18px;
                    font-family: 'Arial', sans-serif;
                    border: none;
                    padding: 10px 20px;
                    cursor: pointer;
                    border-radius: 5px;
                    margin: 0 10px; /* Space between buttons */
                    transition: background-color 0.3s; /* Smooth transition for hover effect */
                }

                button:nth-child(1) { background-color: #E2F0CB; } /* Pastel Green for first button */
                button:nth-child(2) { background-color: #FAD2E1; } /* Pastel Pink for second button */
                button:nth-child(3) { background-color: #F9E2AE; } /* Pastel Yellow for third button */

                button:hover {
                    opacity: 0.9; /* Slight transparency on hover */
                }

                input {
                    width: 40%;
                    height: 30px;
                    font-size: 18px;
                    color: #333333; /* Dark grey text in input */
                    background-color: #F7D6E0; /* Pastel Lavender background for input */
                    border: 2px solid #C5DEDD; /* Pastel Blue border */
                    padding: 5px;
                    border-radius: 5px;
                }

                input:focus {
                    outline: none;
                    border-color: #FAD2E1; /* Pastel Pink border color on focus */
                    box-shadow: 0 0 5px #FAD2E1; /* Soft shadow to highlight focus */
                }

    </style>
</head>
<body>
    
    <div class="jumbotron" style="background: url('https://i.pinimg.com/originals/99/00/8b/99008b82e916278f56da2162dea1cb7d.jpg') no-repeat center center; background-size: cover; height: 350px; /* Increased height */ display: flex; align-items: center; justify-content: center;">
      </div>
      

    <div class="buttons-container">
        <button onclick="connectMetamask()">Connect to Metamask</button>
        <p id="accountArea">Connection Status: Not Connected to Metamask</p>
    </div>
    
    <div class="buttons-container">
        <button onclick="connectContract()">Connect to Contract</button>
        <p id="contractArea">Connection Status: Not Connected to Smart Contract</p>
    </div>
    
    <div class="buttons-container">
        <button onclick="changeWord()">Enter Your Bill Number and confirm</button>
        <input type="text" id="inputArea">
    </div>
    

    <script>
        let account;
        const connectMetamask = async () => {
            if(window.ethereum !== "undefined"){
                const accounts = await ethereum.request({method: "eth_requestAccounts"});
                account = accounts[0];
                document.getElementById("accountArea").innerHTML = `Account is: ${account}`;
            }

        }

        const connectContract = async () => {
            const ABI = [
                  {
                    "inputs": [],
                    "name": "candidateName",
                    "outputs": [
                      {
                        "internalType": "string",
                        "name": "",
                        "type": "string"
                      }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                  },
                  {
                    "inputs": [
                      {
                        "internalType": "string",
                        "name": "_name",
                        "type": "string"
                      }
                    ],
                    "name": "setCandidate",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                  }
                ];
            const Address = "0x30972ebb898a3a70BdBC2995c63c677a0f18808B";
            window.web3 = await new Web3(window.ethereum);
            window.contract = await new window.web3.eth.Contract(ABI, Address);
            document.getElementById("contractArea").innerHTML = "Connection Status: Success";
        }

        // const readWord = async () => {
        //     const data = await window.contract.methods.getFlower().call();
        //     document.getElementById("dataArea").innerHTML = `Word is: ${data}`;
        // }

        const changeWord = async () => {
            const myEntry = document.getElementById("inputArea").value;
            await window.contract.methods.setCandidate(myEntry).send({ from: account });
            window.location.href = '/page7';
        }
        
    </script>
</body>
</html>